package App;

//import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Random;
import javax.swing.Timer;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author dell
 */
public class Quiz_Time extends Details {
    int xMouse;
    int yMouse;
    static int qn = 1;
    public static int nq, cq;
    /**
     * Creates new form Quiz_Time
     */
    public Quiz_Time() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        body = new javax.swing.JPanel();
        scoreLabel = new javax.swing.JLabel();
        scoreCounter = new javax.swing.JLabel();
        timerLabel = new javax.swing.JLabel();
        timerCounter = new javax.swing.JLabel();
        lbQue = new javax.swing.JLabel();
        rop1 = new javax.swing.JRadioButton();
        rop2 = new javax.swing.JRadioButton();
        rop3 = new javax.swing.JRadioButton();
        rop4 = new javax.swing.JRadioButton();
        pre = new javax.swing.JButton();
        getres = new javax.swing.JButton();
        nxt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quiz Time");
        setBounds(new java.awt.Rectangle(400, 200, 0, 0));
        setResizable(false);

        body.setBackground(new java.awt.Color(34, 43, 53));
        body.setForeground(new java.awt.Color(255, 255, 255));

        scoreLabel.setBackground(new java.awt.Color(34, 43, 53));
        scoreLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        scoreLabel.setForeground(new java.awt.Color(255, 255, 255));
        scoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        scoreLabel.setText("Score: ");
        scoreLabel.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                scoreLabelAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        scoreCounter.setBackground(new java.awt.Color(34, 43, 53));
        scoreCounter.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        scoreCounter.setForeground(new java.awt.Color(61, 244, 169));
        scoreCounter.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        scoreCounter.setText("0");

        timerLabel.setBackground(new java.awt.Color(34, 43, 53));
        timerLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        timerLabel.setForeground(new java.awt.Color(255, 255, 255));
        timerLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        timerLabel.setText("Time Remaining:");
        timerLabel.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                timerLabelAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        timerCounter.setBackground(new java.awt.Color(34, 43, 53));
        timerCounter.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        timerCounter.setForeground(new java.awt.Color(255, 61, 61));
        timerCounter.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        timerCounter.setText("10");

        lbQue.setBackground(new java.awt.Color(34, 43, 53));
        lbQue.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbQue.setForeground(new java.awt.Color(255, 255, 255));
        lbQue.setText("Loading question");
        lbQue.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Question", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        rop1.setBackground(new java.awt.Color(34, 43, 53));
        buttonGroup1.add(rop1);
        rop1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rop1.setForeground(new java.awt.Color(255, 255, 255));
        rop1.setText("Option A");

        rop2.setBackground(new java.awt.Color(34, 43, 53));
        buttonGroup1.add(rop2);
        rop2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rop2.setForeground(new java.awt.Color(255, 255, 255));
        rop2.setText("Option B");

        rop3.setBackground(new java.awt.Color(34, 43, 53));
        buttonGroup1.add(rop3);
        rop3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rop3.setForeground(new java.awt.Color(255, 255, 255));
        rop3.setText("Option C");

        rop4.setBackground(new java.awt.Color(34, 43, 53));
        buttonGroup1.add(rop4);
        rop4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rop4.setForeground(new java.awt.Color(255, 255, 255));
        rop4.setText("Option D");

        pre.setBackground(new java.awt.Color(34, 43, 53));
        pre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        pre.setForeground(new java.awt.Color(255, 255, 255));
        pre.setText("<<Prev");
        pre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preActionPerformed(evt);
            }
        });

        getres.setBackground(new java.awt.Color(34, 43, 53));
        getres.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getres.setForeground(new java.awt.Color(255, 255, 255));
        getres.setText("GET RESULT");
        getres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getresActionPerformed(evt);
            }
        });

        nxt.setBackground(new java.awt.Color(34, 43, 53));
        nxt.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        nxt.setForeground(new java.awt.Color(255, 255, 255));
        nxt.setText("Next>>");
        nxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bodyLayout = new javax.swing.GroupLayout(body);
        body.setLayout(bodyLayout);
        bodyLayout.setHorizontalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyLayout.createSequentialGroup()
                .addComponent(scoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scoreCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(timerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timerCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(bodyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyLayout.createSequentialGroup()
                        .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rop4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rop3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbQue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rop1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rop2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(bodyLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(getres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(bodyLayout.createSequentialGroup()
                                .addComponent(pre)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nxt)))
                        .addContainerGap(531, Short.MAX_VALUE))))
        );
        bodyLayout.setVerticalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyLayout.createSequentialGroup()
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(timerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timerCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scoreCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbQue, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rop1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rop2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rop3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rop4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pre, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getres, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    Quiz_Menu h = new Quiz_Menu();
    int timeLeft = 11000;
    
    ActionListener countDown = new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            timeLeft -= 100;
            SimpleDateFormat df = new SimpleDateFormat("ss");
            timerCounter.setText(df.format(timeLeft));
            if (timeLeft <= 0) 
            {
                timer.stop();
                if (qn < 10) {
                    timer.start();
                    String ans = selecteditem();
                    cq += checkans(ans);
                    try {
                        Class.forName("com.mysql.cj.jdbc.Driver");
                        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/quiz","root","root");
                        Statement st = con.createStatement();
                        ResultSet rs = st.executeQuery("Select que," + optrandom() + " from " + h.topic);
                        for (int i = 0; i <= qn; i++) {
                            rs.next();
                            if (qn == 4) {
                                nxt.setVisible(false);
                                getres.setVisible(true);
                            }
                        }
                        lbQue.setText(rs.getString(1));
                        rop1.setText(rs.getString(2));
                        rop2.setText(rs.getString(3));
                        rop3.setText(rs.getString(4));
                        rop4.setText(rs.getString(5));
                        qn += 1;
                        con.close();
                        st.close();
                        rs.close();
                    } catch (Exception e1) {
                        System.out.println(e1);
                    }
                    buttonGroup1.clearSelection();
                    nq += 1;
                    
                    timeLeft = 11000;
                }
                else if (qn == 5) 
                {
                    timer.stop();
                    disposing();
                }
            }
        }
    };
    
    Timer timer = new Timer(100, countDown);

    public static int checkans(String ans)
    {
        int c = 0;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/quiz","root","root");
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("Select op1 from " + Quiz_Menu.topic);
            for (int i = 0; i <= (qn - 1); i++) {
                rs.next();
            }
            String an = rs.getString(1);
            
            System.out.println("\nYour answer: "+ans);
            System.out.println("Correct answer: "+an);
            
            if (an.equals((ans))) {
                c = 1;
                cS++;
                if(cS>bS) bS=cS;
            }
            con.close();
            st.close();
            rs.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        return c;
    }

    public static String optrandom() 
    {
        Random r = new Random();
        int n1, n2, n3, n4;
        n1 = r.nextInt(4) + 1;
        for (;;) {
            n2 = r.nextInt(4) + 1;
            if (n2 != n1) {
                break;
            }
        }
        for (;;) {
            n3 = r.nextInt(4) + 1;
            if (n3 != n1 && n3 != n2) {
                break;
            }
        }
        for (;;) 
        {
            n4 = r.nextInt(4) + 1;
            if (n4 != n1 && n4 != n2 && n4 != n3) {
                break;
            }
        }
        String s = "op" + n1 + ",op" + n2 + ",op" + n3 + ",op" + n4;
        return s;
    }

    public String selecteditem()
    {
        String ans = "";
        if (rop1.isSelected()) 
            ans = rop1.getText();
        else if (rop2.isSelected()) 
            ans = rop2.getText();
        else if (rop3.isSelected()) 
            ans = rop3.getText();
        else if (rop4.isSelected()) 
            ans = rop4.getText();
        return ans;
    }

    public void disposing() 
    {
        cq += checkans(selecteditem());
        nq += 1;
        Quiz_Result f = new Quiz_Result();
        Quiz_Time q = new Quiz_Time();
        f.setVisible(true);
        this.dispose();
    }
    
    private void nxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nxtActionPerformed
        
        scoreCounter.setText(""+cS);
        timer.stop();
        pre.setVisible(true);
        timeLeft = 11000;
        timer.start();
        String ans = selecteditem();
        cq += checkans(ans);
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/quiz","root","root");
            java.sql.Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("Select que," + optrandom() + " from " + h.topic);
            for (int i = 0; i <= qn; i++) {
                rs.next();
                if (qn == 4) {
                    nxt.setVisible(false);
                    getres.setVisible(true);
                }
            }
            lbQue.setText(rs.getString(1));
            rop1.setText(rs.getString(2));
            rop2.setText(rs.getString(3));
            rop3.setText(rs.getString(4));
            rop4.setText(rs.getString(5));
            qn += 1;
            con.close();
            st.close();
            rs.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        buttonGroup1.clearSelection();
        nq += 1;                                                                          
    }//GEN-LAST:event_nxtActionPerformed

    private void preActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preActionPerformed
        String ans = selecteditem();
        cq -= checkans(ans);
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/quiz","root","root");
            java.sql.Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("Select que," + optrandom() + " from " + h.topic);
            for (int i = 0; i <= (qn - 2); i++) {
                rs.next();
                if ((qn - 2) == 0) {
                    pre.setVisible(false);
                }
                nxt.setVisible(true);
            }
            lbQue.setText(rs.getString(1));
            rop1.setText(rs.getString(2));
            rop2.setText(rs.getString(3));
            rop3.setText(rs.getString(4));
            rop4.setText(rs.getString(5));
            qn -= 1;
            con.close();
            st.close();
            rs.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        buttonGroup1.clearSelection();
        nq -= 1;
    }//GEN-LAST:event_preActionPerformed

    private void getresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getresActionPerformed
        System.out.println("Score: "+cq/nq);
        timer.stop();
        disposing();
    }//GEN-LAST:event_getresActionPerformed

    private void timerLabelAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_timerLabelAncestorAdded
        timer.start();
        pre.setVisible(false);
        getres.setVisible(false);
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/quiz","root","root");
            java.sql.Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("Select que," + optrandom() + " from " + h.topic);
            rs.next();
            lbQue.setText(rs.getString(1));
            rop1.setText(rs.getString(2));
            rop2.setText(rs.getString(3));
            rop3.setText(rs.getString(4));
            rop4.setText(rs.getString(5));
            con.close();
            st.close();
            rs.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_timerLabelAncestorAdded

    private void scoreLabelAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_scoreLabelAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_scoreLabelAncestorAdded
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Quiz_Time.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Quiz_Time.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Quiz_Time.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Quiz_Time.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Quiz_Time().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel body;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton getres;
    private javax.swing.JLabel lbQue;
    private javax.swing.JButton nxt;
    private javax.swing.JButton pre;
    private javax.swing.JRadioButton rop1;
    private javax.swing.JRadioButton rop2;
    private javax.swing.JRadioButton rop3;
    private javax.swing.JRadioButton rop4;
    private javax.swing.JLabel scoreCounter;
    private javax.swing.JLabel scoreLabel;
    private javax.swing.JLabel timerCounter;
    private javax.swing.JLabel timerLabel;
    // End of variables declaration//GEN-END:variables
}
